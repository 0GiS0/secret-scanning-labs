trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - .github/**
      - steps.sh
      - .gitignore

pool:
  vmImage: ubuntu-latest

jobs:
  - job: detectsecrets 
    steps:
      - task: UsePythonVersion@0
        displayName: "Set Python 3 as default"
        inputs:
          versionSpec: "3"
          addToPath: true
          architecture: "x64"

      - bash: pip install detect-secrets
        displayName: "Install detect-secrets using pip"

      - bash: |
          detect-secrets --version
          detect-secrets scan --all-files --force-use-all-plugins --exclude-files FETCH_HEAD > $(Pipeline.Workspace)/detect-secrets.json
        displayName: "Run detect-secrets tool"

      - task: PublishPipelineArtifact@1
        displayName: "Publish results in the Pipeline Artifact"
        inputs:
          targetPath: "$(Pipeline.Workspace)/detect-secrets.json"
          artifact: "detect-secrets-ubuntu"
          publishLocation: "pipeline"

      - bash: |
          dsjson=$(cat $(Pipeline.Workspace)/detect-secrets.json)
          echo "${dsjson}"

          count=$(echo "${dsjson}" | jq -c -r '.results | length')

          if [ $count -gt 0 ]; then
            msg="Secrets were detected in code. ${count} file(s) affected."
            echo "##vso[task.logissue type=error]${msg}"
            echo "##vso[task.complete result=Failed;]${msg}."
            echo "Secrets were detected in code. ${count} file(s) affected. üòµ‚Äçüí´"
          else
            echo "##vso[task.complete result=Succeeded;]No secrets detected."
            echo "No secrets were detected in code ü•≥"
          fi
        displayName: "Analyzing detect-secrets results"

  - job: trufflehog    
    steps:
      - script: |
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
          trufflehog --version
        displayName: "Install Trufflehog"

      - script: |
          trufflehog filesystem . --fail
        displayName: "Run Trufflehog"
  
  - job: gitguardian    
    steps:
      - script: pip install ggshield
        displayName: "Install ggshield"
      - script: ggshield secret scan ci
        env:
          GITGUARDIAN_API_KEY: $(gitguardianApiKey)